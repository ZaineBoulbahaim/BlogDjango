name: Django Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      run: |
        python manage.py migrate

    - name: Run tests
      run: |
        python manage.py test
    
    - name: Generate documentation with Pydoc (via Django shell)
      run: |
        mkdir -p docs
        echo "import pydoc; import blog.models; pydoc.writedoc(blog.models)" | python manage.py shell
        echo "import pydoc; import blog.views; pydoc.writedoc(blog.views)" | python manage.py shell
        mv blog.models.html docs/models_doc.html
        mv blog.views.html docs/views_doc.html
    
    - name: Push Pydoc to main
      env:
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add docs/*.html
        git commit -m "Actualitza documentaci√≥ Pydoc" || echo "Sense canvis"
        git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }}.git main

